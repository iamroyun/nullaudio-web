---
// Navigation component with responsive design and smooth animations
// Features: Desktop horizontal nav, mobile hamburger menu with overlay
---

<!-- Desktop Navigation -->
<nav class="fixed top-6 right-6 z-50">
  <!-- Desktop Menu -->
  <div class="hidden md:flex items-center gap-8 px-6 py-4">
    <a 
      href="/fragments" 
      class="nav-link text-sm font-light uppercase tracking-widest text-neutral-400 hover:text-violet-300 transition-colors duration-300"
    >
      fragments
    </a>
    <a 
      href="/transmissions" 
      class="nav-link text-sm font-light uppercase tracking-widest text-neutral-400 hover:text-violet-300 transition-colors duration-300"
    >
      transmissions
    </a>
    <a 
      href="/manifest" 
      class="nav-link text-sm font-light uppercase tracking-widest text-neutral-400 hover:text-violet-300 transition-colors duration-300"
    >
      manifest
    </a>
  </div>

  <!-- Mobile Menu Button -->
  <button 
    id="menuButton" 
    aria-label="Toggle mobile menu" 
    aria-expanded="false" 
    class="md:hidden flex flex-col items-center justify-center gap-2 w-12 h-10 transition-colors duration-200"
  >
    <span id="bar1" class="block w-8 h-0.5 bg-white transition-transform duration-300 ease-out"></span>
    <span id="bar2" class="block w-8 h-0.5 bg-white transition-transform duration-300 ease-out"></span>
  </button>
</nav>

<!-- Mobile Overlay Menu -->
<div 
  id="mobileOverlay" 
  class="fixed inset-0 z-40 bg-black/0 opacity-0 pointer-events-none transition-all duration-300 ease-out md:hidden"
>
  <div class="flex flex-col items-center justify-center h-full gap-12">
    <a 
      href="/fragments" 
      class="nav-link-mobile text-3xl font-regular uppercase tracking-widest"
      data-mobile-nav-link
    >
      <span style="display: inline-block; transform: translateY(110%); filter: blur(8px); opacity: 0;">fragments</span>
    </a>
    <a 
      href="/transmissions" 
      class="nav-link-mobile text-3xl font-regular uppercase tracking-widest"
      data-mobile-nav-link
    >
      <span style="display: inline-block; transform: translateY(110%); filter: blur(8px); opacity: 0;">transmissions</span>
    </a>
    <a 
      href="/manifest" 
      class="nav-link-mobile text-3xl font-regular uppercase tracking-widest"
      data-mobile-nav-link
    >
      <span style="display: inline-block; transform: translateY(110%); filter: blur(8px); opacity: 0;">manifest</span>
    </a>
  </div>
</div>

<!-- Custom Styles for Navigation Links -->
<style>
  /* Desktop navigation link with animated underline */
  .nav-link {
    position: relative;
    display: inline-block;
    overflow: visible;
  }
  
  .nav-link::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    bottom: -3px;
    height: 1px;
    background-color: #a78bfa;
    opacity: 0;
    transform: scaleX(0);
    transform-origin: left;
    transition: 
      transform 0.32s cubic-bezier(0.68, 0.01, 0.25, 1), 
      opacity 0.28s cubic-bezier(0.68, 0.01, 0.25, 1);
    pointer-events: none;
    z-index: 1;
  }
  
  .nav-link:hover::after,
  .nav-link:focus-visible::after {
    transform: scaleX(1);
    opacity: 1;
  }
  
  /* Mobile navigation link styling */
  .nav-link-mobile {
    color: var(--color-muted);
    transition: color 0.2s ease-in-out;
  }
  
  .nav-link-mobile:hover {
    color: var(--color-brand-primary);
  }
</style>

<!-- Mobile Menu JavaScript -->
<script>
  import { gsap } from 'gsap';
  // DOM elements
  const menuButton = document.getElementById('menuButton');
  const overlay = document.getElementById('mobileOverlay');
  const mobileLinks = overlay ? overlay.querySelectorAll('[data-mobile-nav-link]') : [];
  
  // State management
  let isMenuOpen = false;
  
  /**
   * Opens the mobile menu with smooth animations
   */
  function openMobileMenu() {
    if (!overlay || !menuButton) return;
    
    isMenuOpen = true;
    
    // Show overlay with background
    overlay.classList.remove('pointer-events-none', 'opacity-0');
    overlay.classList.add('pointer-events-auto', 'opacity-100');
    overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.95)';
    
    // Update button state
    menuButton.setAttribute('aria-expanded', 'true');
    
    // Animate hamburger to X
    const bar1 = document.getElementById('bar1');
    const bar2 = document.getElementById('bar2');
    if (bar1 && bar2) {
      bar1.style.transform = 'translateY(5px) rotate(45deg)';
      bar2.style.transform = 'translateY(-5px) rotate(-45deg)';
    }
    
    // Prevent body scroll
    document.body.style.overflow = 'hidden';
    
    // Manually trigger mask animations for mobile menu links
    setTimeout(() => {
      const mobileLinks = overlay.querySelectorAll('[data-mobile-nav-link]');
      mobileLinks.forEach((link, index) => {
        const inner = link.querySelector('span');
        if (inner) {
          // Animate in with stagger
          setTimeout(() => {
            gsap.to(inner, {
              y: '0%',
              opacity: 1,
              filter: 'blur(0px)',
              duration: 1.4,
              ease: 'power3.out',
            });
          }, index * 150); // Stagger each link by 150ms
        }
      });
    }, 100); // Small delay to ensure overlay is visible
  }
  
  /**
   * Closes the mobile menu and resets all states
   */
  function closeMobileMenu() {
    if (!overlay || !menuButton) return;
    
    isMenuOpen = false;
    
    // Hide overlay
    overlay.classList.add('pointer-events-none', 'opacity-0');
    overlay.classList.remove('pointer-events-auto', 'opacity-100');
    overlay.style.backgroundColor = '';
    
    // Reset button state
    menuButton.setAttribute('aria-expanded', 'false');
    
    // Reset hamburger animation
    const bar1 = document.getElementById('bar1');
    const bar2 = document.getElementById('bar2');
    if (bar1 && bar2) {
      bar1.style.transform = '';
      bar2.style.transform = '';
    }
    
    // Restore body scroll
    document.body.style.overflow = '';
    
    // Reset mobile menu link animations
    const mobileLinks = overlay.querySelectorAll('[data-mobile-nav-link]');
    mobileLinks.forEach((link) => {
      const inner = link.querySelector('span');
      if (inner) {
        // Reset to initial state
        inner.style.transform = 'translateY(110%)';
        inner.style.filter = 'blur(8px)';
        inner.style.opacity = '0';
      }
    });
  }
  
  /**
   * Toggles mobile menu state
   */
  function toggleMobileMenu() {
    if (isMenuOpen) {
      closeMobileMenu();
    } else {
      openMobileMenu();
    }
  }
  
  // Event listeners
  if (menuButton) {
    menuButton.addEventListener('click', toggleMobileMenu);
  }
  
  // Close menu when clicking on mobile links
  mobileLinks.forEach((link) => {
    link.addEventListener('click', closeMobileMenu);
  });
  
  // Close menu with Escape key
  document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && isMenuOpen) {
      closeMobileMenu();
    }
  });
</script>