---
import SampleCard from '../components/SampleCard.astro';
import AnimatedText from './animations/AnimatedText.astro';
---

<section class="section-fade relative h-screen md:h-screen min-h-screen text-white overflow-hidden section-spacing">
  <!-- Desktop layout -->
  <div class="hidden md:flex items-center justify-center h-full">
    <!-- Centered heading + text -->
    <div class="relative z-20 text-center px-6 flex flex-col items-center">

      <AnimatedText
        as="h2"
        variant="mask"
        className="heading-2"
        text='fragments'
      />
      <AnimatedText
        as="p"
        variant="words"
        className="subheading max-w-sm"
        text='the majority of my life i spent alone quietly sitting in a dimly lit room. <span class="text-neutral-800">while it was lonely, this is where i felt safe.</span>'
      />
      <a 
      href="/samples" 
      class="explore-link mb-4 text-violet-300 font-semibold tracking-wider uppercase text-base transition-colors duration-200"
      aria-label="Explore all fragments"
    >
      EXPLORE ALL
    </a>
    </div>

    <!-- Floating cards (desktop only) -->
    <div class="absolute inset-0">
      <div class="floating-card absolute top-[10%] left-[20%] w-40" data-rot="-0">
        <SampleCard image="/images/samplepack-1.jpg" title="pack 01" category="Uncategorized" />
      </div>
      <div class="floating-card absolute bottom-[5%] left-[48%] w-44" data-rot="0">
        <SampleCard image="/images/samplepack-1.jpg" title="pack 03" category="Uncategorized" />
      </div>
      <div class="floating-card absolute top-[30%] right-[12%] w-48" data-rot="0">
        <SampleCard image="/images/samplepack-1.jpg" title="pack 02" category="Uncategorized" />
      </div>
    </div>
  </div>

  <!-- Mobile layout: single column -->
  <div class="md:hidden flex flex-col items-center justify-center min-h-screen px-6 text-center py-8">
    <div class="mb-8">
      <a 
        href="/samples" 
        class="explore-link inline-block mb-4 text-violet-300 font-semibold tracking-wider uppercase text-base transition"
        aria-label="Explore all fragments"
        style="color: #c084fc;"
      >
        EXPLORE ALL â†’
      </a>
      <h2 class="text-4xl pt-4 font-normal mb-4 uppercase">
        fragments
      </h2>
      <p class="text-xl text-neutral-200 mb-8 max-w-sm uppercase font-light tracking-wide">
          the majority of my life i spent alone quietly sitting in a dimly lit room. <span class="text-neutral-800">while it was lonely, this is where i felt safe.</span>
      </p>
    </div>
    
    <!-- Mobile cards stacked below text -->
    <div class="flex flex-col gap-6 w-full max-w-sm">
      <SampleCard image="/images/samplepack-1.jpg" title="pack 01" category="Uncategorized" />
      <SampleCard image="/images/samplepack-1.jpg" title="pack 02" category="Uncategorized" />
      <SampleCard image="/images/samplepack-1.jpg" title="pack 03" category="Uncategorized" />
    </div>
  </div>

  <!-- Custom Styles for Explore Link -->
  <style>
    /* Explore link with animated underline (same as navbar) */
    .explore-link {
      position: relative;
      display: inline-block;
      overflow: visible;
    }
    
    .explore-link::after {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      bottom: -3px;
      height: 1px;
      background-color: #a78bfa;
      opacity: 0;
      transform: scaleX(0);
      transform-origin: left;
      transition: 
        transform 0.32s cubic-bezier(0.68, 0.01, 0.25, 1), 
        opacity 0.28s cubic-bezier(0.68, 0.01, 0.25, 1);
      pointer-events: none;
      z-index: 1;
    }
    
    .explore-link:hover::after,
    .explore-link:focus-visible::after {
      transform: scaleX(1);
      opacity: 1;
    }
  </style>

  <script>
    if (window.matchMedia('(min-width: 768px)').matches) {
      const cards = document.querySelectorAll('.floating-card');
      let mouseX = 0, mouseY = 0;
      let currentX = 0, currentY = 0;

      window.addEventListener('mousemove', (e) => {
        mouseX = (e.clientX / window.innerWidth - 0.5) * 2;
        mouseY = (e.clientY / window.innerHeight - 0.5) * 2;
      });

      function animate() {
        currentX += (mouseX - currentX) * 0.05;
        currentY += (mouseY - currentY) * 0.05;

        cards.forEach((card, i) => {
          const depth = (i + 1) * 10;
          const x = currentX * depth;
          const y = currentY * depth;
          const rot = (card as HTMLElement).dataset.rot || 0;
          (card as HTMLElement).style.transform = `translate(${x}px, ${y}px) rotate(${rot}deg)`;
        });

        requestAnimationFrame(animate);
      }

      animate();
    }
  </script>
</section>