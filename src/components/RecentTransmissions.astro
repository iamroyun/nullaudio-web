---
import WideCard from './WideCard.astro';
import { sanityClient, urlFor } from '../lib/sanity';
import type { Post } from '../types/sanity';
import AnimatedText from './animations/AnimatedText.astro';

// Fetch posts from Sanity
const posts: Post[] = await sanityClient.fetch(`
  *[_type == "post"] | order(publishedDate desc) [0...2] {
    _id,
    title,
    slug,
    publishedDate,
    excerpt,
    coverImage,
    "categories": categories[]->{
      _id,
      name,
      slug
    },
    "authors": author[]->{
      _id,
      name,
      slug
    }
  }
`);

// Helper function to get category color based on category name
function getCategoryColor(categoryName: string): string {
  const colorMap: { [key: string]: string } = {
    'TUTORIAL': 'bg-purple-400',
    'REVIEW': 'bg-blue-500',
    'NEWS': 'bg-green-500',
    'INTERVIEW': 'bg-orange-500',
    'FEATURE': 'bg-pink-500',
    'ANALYSIS': 'bg-indigo-500',
  };
  return colorMap[categoryName.toUpperCase()] || 'bg-gray-500';
}

// Helper function to format date
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}
---

<section class="section-fade text-white relative h-screen max-w-7xl mx-auto px-6 md:px-20 py-32 section-spacing">
  <div>
    <AnimatedText
    as="h2"
    variant="mask"
    className="heading-2 pt-4"
    text='recent transmissions'
  />
    <AnimatedText
    as="p"
    variant="words"
    className="subheading max-w-lg"
    text='Decoded messages from the <span class="text-neutral-800">Void</span>. I hope they will guide you. '
  />
    <div class="flex flex-col gap-6">
      {posts.map((post) => (
        <WideCard 
          id={parseInt(post._id.replace(/[^0-9]/g, '')) || 0}
          image={post.coverImage ? urlFor(post.coverImage).width(400).height(300).fit("crop").crop("center").quality(80).format("webp").url() : "https://placehold.co/400x300/111111/FFFFFF?text=No+Image"}
          imageSrcSet={post.coverImage ? 
            `${urlFor(post.coverImage).width(200).height(150).fit("crop").crop("center").quality(80).format("webp").url()} 200w,
             ${urlFor(post.coverImage).width(400).height(300).fit("crop").crop("center").quality(80).format("webp").url()} 400w,
             ${urlFor(post.coverImage).width(600).height(450).fit("crop").crop("center").quality(80).format("webp").url()} 600w` : 
            undefined}
          title={post.title}
          description={post.excerpt || "No description available."}
          link={`/blog/${post.slug.current}`}
          category={post.categories?.[0]?.name || "UNCATEGORIZED"}
          categoryColor={getCategoryColor(post.categories?.[0]?.name || "")}
          date={formatDate(post.publishedDate)}
        />
      ))}
    </div>
  </div>
</section>
